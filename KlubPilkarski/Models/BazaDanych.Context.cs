//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KlubPilkarski.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BazaDanychEntities : DbContext
    {
        public BazaDanychEntities()
            : base("name=BazaDanychEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Klub> Klub { get; set; }
        public virtual DbSet<Kolejka> Kolejka { get; set; }
        public virtual DbSet<Mecz> Mecz { get; set; }
        public virtual DbSet<Sedzia> Sedzia { get; set; }
        public virtual DbSet<Sezon> Sezon { get; set; }
        public virtual DbSet<Stadion> Stadion { get; set; }
        public virtual DbSet<Trener> Trener { get; set; }
        public virtual DbSet<Zawodnik> Zawodnik { get; set; }
        public virtual DbSet<ZawodnikMecz> ZawodnikMecz { get; set; }
    
        public virtual ObjectResult<TabelaLigowaSezon_Result> TabelaLigowaSezon(Nullable<int> wybranySezon)
        {
            var wybranySezonParameter = wybranySezon.HasValue ?
                new ObjectParameter("WybranySezon", wybranySezon) :
                new ObjectParameter("WybranySezon", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TabelaLigowaSezon_Result>("TabelaLigowaSezon", wybranySezonParameter);
        }
    
        public virtual ObjectResult<ZawodnikStatystyki_Result> ZawodnikStatystyki(Nullable<int> wybranyZawodnik)
        {
            var wybranyZawodnikParameter = wybranyZawodnik.HasValue ?
                new ObjectParameter("WybranyZawodnik", wybranyZawodnik) :
                new ObjectParameter("WybranyZawodnik", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZawodnikStatystyki_Result>("ZawodnikStatystyki", wybranyZawodnikParameter);
        }
    }
}
